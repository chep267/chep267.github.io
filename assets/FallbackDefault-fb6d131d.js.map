{"version":3,"mappings":"qLAeA,MAAMA,EAAgBC,GAA4B,CACxC,MAAEC,kBAAkB,GAAIC,QAAQ,IAAMC,WAAUC,YAAeJ,IAE/DK,EAAeC,WACf,CAACC,EAAQC,CAAS,EAAIF,WAAeL,CAAe,EACpD,CAACQ,EAASC,CAAU,EAAIJ,WAAe,CAAC,EAExCK,EAASL,cAAkB,IAAMM,cAAcP,EAAaQ,OAAO,EAAG,EAAE,EAExEC,EAAYR,cAAkB,CAACS,EAASd,IAAoB,CACvDU,IACPH,EAAUO,CAAM,EACJC,MAAUA,EAAO,GAAK,CAAC,CACvC,EAAG,CAAE,GAELV,mBAAgB,IAAM,CACZW,QAAkBA,IACpBT,EAAiBU,GAAA,CACb,GAAIA,IAAM,EAAG,CAET,GADWf,MACPC,EACOH,SAEJU,GACX,CACA,OAAOO,EAAI,EACd,EAEQL,iBAAUM,YAAYF,EAAiBf,CAAK,EAClD,IAAM,CACTU,cAAcP,EAAaQ,OAAO,EACtC,EACD,CAACJ,CAAO,CAAC,EAEL,CACHF,SACAO,YACAH,SAER,EC9CMS,EAAYC,EAAW,CAAC,CAAEC,QAAO,KAAO,CAC1CC,SAAU,CACNC,eAAgB,SAChBC,WAAY,SACZC,MAAO,QACPC,OAAQ,QACRC,SAAU,QACd,EACAC,QAAS,CACLL,eAAgB,SAChBC,WAAY,SACZH,OAAQA,EAAOQ,MACf,QAAS,CACLJ,MAAO,OACPC,OAAQ,IACRI,aAAc,KAClB,CACJ,CACJ,EAAE,EAEF,IAAAC,EAAeZ,ECGf,MAAMa,EAAW3B,EAAM4B,KAAK,IAAMC,EAAA,WAAO,qBAAmC,oHAAC,EAE9D,SAAfC,EAAwCpC,EAA6B,CAC3D,MAAEqC,cAAiBrC,IACnBsC,EAAUlB,IACV,CAAEmB,iBAAkBC,EAAQ,EAE5BC,EAAenC,cAAkB,IAAMoC,OAAOC,SAASC,SAAU,EAAE,EAEnE,CAAErC,UAAWR,EAAa,CAAEI,SAAUsC,EAAcxC,gBAAiB4C,EAAyB,EAEpG,OACKC,OAAAC,EAAA,CAAM,UAAWT,EAAQf,SACtB,UAACuB,EAAA,KAAAC,EAAA,CAAM,UAAWT,EAAQT,QACtB,UAAAmB,MAACC,GAAS,KAAK,QAAQ,MAAO,IAAK,OAAQ,IAAI,EAE9CD,MAAAE,EAAA,CAAW,QAAQ,KAAK,WAAY,IAAK,MAAM,aAC3CX,SAAcY,IAAY,kCAAkC,CAAC,CAClE,GAECH,EAAA,IAAAE,EAAA,CAAW,QAAQ,KAAK,WAAY,IAAK,GAAI,EAAG,MAAM,aAClDX,WAAcY,EAAY,oCAAoC,CAAC,EACpE,EAECH,EAAA,IAAAI,EAAA,CAAO,QAASX,EAAc,QAAQ,WAAW,KAAK,QAAQ,MAAM,QAChEF,WAAcY,EAAY,kCAAkC,CAAC,EAClE,EAECd,EACGW,EAAA,IAACE,EAAW,SAAQ,YAAY,WAAY,IAAK,MAAM,aAAa,GAAI,EACnEX,SAAcY,IAAY,uCAAuC,EAAG,CAAE5C,SAAQ,EACnF,EACA,MACR,EAEAyC,MAACK,WAAA,CAAe,SAAU,KACtB,SAAAL,MAACf,GAAQ,GACb,CACJ,GAER","names":["useCountdown","props","numberCountdown","timer","callback","isContinue","countdownRef","React","second","setSecond","refresh","setRefresh","onStop","clearInterval","current","onRefresh","number","prev","countdownEffect","s","setInterval","useStyles","makeStyles","zIndex","fallback","justifyContent","alignItems","width","height","overflow","content","modal","borderRadius","styles_default","Particle","lazy","__vitePreload","FallbackDefault","isAutoReload","classes","formatMessage","useIntl","reloadWindow","window","location","reload","SECOND_COUNT_DOWN_ERROR","jsxs","Stack","jsx","IconBase","Typography","baseMessage","Button","React.Suspense"],"sources":["../../src/modules/module-base/hooks/useCountdown.ts","../../src/modules/module-base/components/ErrorBoundary/styles.ts","../../src/modules/module-base/components/ErrorBoundary/FallbackDefault.tsx"],"sourcesContent":["/**\n *\n * @author dong.nguyenthanh@powergatesoftware.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\n\ntype UseCountdownType = {\n    numberCountdown?: number /** thời gian đếm ngược */;\n    timer?: number /**  khoảng đếm ngược */;\n    isContinue?: boolean /** có  tiếp tục đếm ngược khi về 0 */;\n    callback?(): void /** fn callback khi  đếm ngược khi về 0 */;\n};\n\nconst useCountdown = (props: UseCountdownType) => {\n    const { numberCountdown = 10, timer = 1000, callback, isContinue } = props;\n\n    const countdownRef = React.useRef<NodeJS.Timeout>();\n    const [second, setSecond] = React.useState(numberCountdown);\n    const [refresh, setRefresh] = React.useState(0);\n\n    const onStop = React.useCallback(() => clearInterval(countdownRef.current), []);\n\n    const onRefresh = React.useCallback((number = numberCountdown) => {\n        onStop();\n        setSecond(number);\n        setRefresh((prev) => (prev + 1) % 7);\n    }, []);\n\n    React.useEffect(() => {\n        const countdownEffect = () =>\n            setSecond((s) => {\n                if (s === 1) {\n                    callback?.();\n                    if (isContinue) {\n                        return numberCountdown;\n                    }\n                    onStop();\n                }\n                return s - 1;\n            });\n\n        countdownRef.current = setInterval(countdownEffect, timer);\n        return () => {\n            clearInterval(countdownRef.current);\n        };\n    }, [refresh]);\n\n    return {\n        second,\n        onRefresh,\n        onStop,\n    };\n};\n\nexport { useCountdown };\n","/**\n *\n * @author dong.nguyenthanh@powergatesoftware.com on 24/08/2023.\n *\n */\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles(({ zIndex }) => ({\n    fallback: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden',\n    },\n    content: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: zIndex.modal,\n        '& img': {\n            width: 'auto',\n            height: 150,\n            borderRadius: '50%',\n        },\n    },\n}));\n\nexport default useStyles;\n","/**\n *\n * @author dong.nguyenthanh@powergatesoftware.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\n\n/** lib components */\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\n/** constants */\nimport { SECOND_COUNT_DOWN_ERROR } from '@module-base/constants/defaultValue';\n\n/** utils */\nimport { baseMessage } from '@module-base/utils/messages';\n\n/** hooks */\nimport { useCountdown } from '@module-base/hooks/useCountdown';\n\n/** styles */\nimport useStyles from './styles';\n\n/** types */\nimport type { FallbackDefaultProps } from '@module-base/models';\nimport IconBase from '@module-base/components/IconBase';\n\n/** lazy components */\nconst Particle = React.lazy(() => import('@module-base/components/Particles'));\n\nexport default function FallbackDefault(props: FallbackDefaultProps) {\n    const { isAutoReload } = props;\n    const classes = useStyles();\n    const { formatMessage } = useIntl();\n\n    const reloadWindow = React.useCallback(() => window.location.reload(), []);\n\n    const { second } = useCountdown({ callback: reloadWindow, numberCountdown: SECOND_COUNT_DOWN_ERROR });\n\n    return (\n        <Stack className={classes.fallback}>\n            <Stack className={classes.content}>\n                <IconBase name=\"error\" width={237} height={213} />\n\n                <Typography variant=\"h1\" fontWeight={600} color=\"error.main\">\n                    {formatMessage(baseMessage['module.base.error.fallback.title'])}\n                </Typography>\n\n                <Typography variant=\"h6\" fontWeight={600} py={2} color=\"error.main\">\n                    {formatMessage(baseMessage['module.base.error.fallback.content'])}\n                </Typography>\n\n                <Button onClick={reloadWindow} variant=\"outlined\" size=\"large\" color=\"error\">\n                    {formatMessage(baseMessage['module.base.error.fallback.retry'])}\n                </Button>\n\n                {isAutoReload ? (\n                    <Typography variant=\"subtitle1\" fontWeight={600} color=\"error.main\" pt={3}>\n                        {formatMessage(baseMessage['module.base.error.fallback.autoReload'], { second })}\n                    </Typography>\n                ) : null}\n            </Stack>\n\n            <React.Suspense fallback={null}>\n                <Particle />\n            </React.Suspense>\n        </Stack>\n    );\n}\n"],"file":"assets/FallbackDefault-fb6d131d.js"}