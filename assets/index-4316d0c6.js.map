{"version":3,"mappings":"uJAMO,MAAMA,EAAgBC,OAAOC,OAAO,CACvCC,UAAW,0BACXC,WAAY,2BACZC,QAAS,uBACb,CAAC,ECJYC,EAAcL,OAAOC,OAAO,CACrCK,KAAM,IACNF,QAAS,UACTG,WAAY,eACZC,SAAU,YACVC,QAAS,WACTC,WAAY,8BAChB,CAAC,ECgBKC,EAAeC,EAAMC,KAAK,IAAMC,EAAA,WAAO,qBAAmC,6OAAC,EAEjF,SAASC,EAAUC,EAA0B,CACnC,MAAEC,YAAaC,EAAY,EAC3BC,EAAWC,IACXC,EAAOC,IACPC,EAAcC,EAAQC,IAAIC,CAAoB,EAE9CC,EAAeN,EAAKO,OACpB7B,EAAcG,UACdqB,EACAxB,EAAcI,WACdJ,EAAcK,QAoBpB,OAlBAQ,YAAgB,IAAM,CACdiB,MACAF,WAAiB5B,EAAcI,YAE/B2B,EAAWC,EAAwBC,GAAA,CAC3BA,IACAH,EAAUI,WAAW,IAAM,CACvBZ,EAAKa,WAAW,CAAEN,OAAQ,GAAMI,KAAI,GACrCG,CAAgB,EACvB,CACH,EAEDR,IAAiB5B,EAAcG,WAAaF,OAAOoC,OAAO/B,CAAW,EAAEgC,SAASpB,IAChFE,EAASd,EAAYC,KAAM,CAAEgC,QAAS,GAAM,EAEzC,IAAMC,aAAaV,CAAO,GAClC,CAACF,CAAY,CAAC,EAETA,EAAY,CAChB,KAAK5B,EAAcG,UACf,OAAOc,GAAOwB,SAClB,KAAKzC,EAAcI,WACf,aAAQsC,EAAe,IAC3B,QACI,aAAQ9B,EAAe,GAC/B,CACJ,CAEA,IAAA+B,EAAe3B","names":["ACCOUNT_STATE","Object","freeze","SIGNED_IN","RE_SIGN_IN","SIGN_IN","AUTH_SCREEN","HOME","VERIFY_OTP","REGISTER","RECOVER","RESET_PASS","SignInScreen","React","lazy","__vitePreload","AuthRoute","props","pathname","useLocation","navigate","useNavigate","auth","useAuth","accessToken","Cookies","get","accessTokenCookieKey","accountState","isAuth","timeout","restartApi","authentication","me","setTimeout","toggleAuth","TIMING_APP_START","values","includes","replace","clearTimeout","children","StartLoading","AuthRoute_default"],"sources":["../../src/modules/module-auth/constants/accountState.ts","../../src/modules/module-auth/constants/screen.ts","../../src/modules/module-auth/screens/AuthRoute/index.tsx"],"sourcesContent":["/**\n *\n * @author dong.nguyenthanh@powergatesoftware.com on 26/07/2023.\n *\n */\n\nexport const ACCOUNT_STATE = Object.freeze({\n    SIGNED_IN: 'ACCOUNT_STATE_SIGNED_IN',\n    RE_SIGN_IN: 'ACCOUNT_STATE_RE_SIGN_IN',\n    SIGN_IN: 'ACCOUNT_STATE_SIGN_IN',\n});\n","/**\n *\n * @author dong.nguyenthanh@powergatesoftware.com on 26/07/2023.\n *\n */\n\nexport const AUTH_SCREEN = Object.freeze({\n    HOME: '/',\n    SIGN_IN: '/signin',\n    VERIFY_OTP: '/verify-code',\n    REGISTER: '/register',\n    RECOVER: '/recover',\n    RESET_PASS: '/password/reset-verification',\n});\n","/**\n *\n * @author dong.nguyenthanh@powergatesoftware.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport Cookies from 'js-cookie';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n/** apis */\nimport { authentication, restartApi } from '@module-auth/apis';\n\n/** components */\nimport StartLoading from '@module-base/components/StartLoading';\n\n/** constants */\nimport { accessTokenCookieKey } from '@module-base/constants/localStoreKey';\nimport { TIMING_APP_START } from '@module-base/constants/defaultValue';\nimport { ACCOUNT_STATE } from '@module-auth/constants/accountState';\nimport { AUTH_SCREEN } from '@module-auth/constants/screen';\n\n/** hooks */\nimport { useAuth } from '@module-auth/hooks/useAuth';\n\n/** types */\nimport type { PropsWithChildren } from 'react';\n\n/** screens */\nconst SignInScreen = React.lazy(() => import('@module-auth/screens/SignInScreen'));\n\nfunction AuthRoute(props: PropsWithChildren) {\n    const { pathname } = useLocation();\n    const navigate = useNavigate();\n    const auth = useAuth();\n    const accessToken = Cookies.get(accessTokenCookieKey);\n\n    const accountState = auth.isAuth\n        ? ACCOUNT_STATE.SIGNED_IN\n        : accessToken\n        ? ACCOUNT_STATE.RE_SIGN_IN\n        : ACCOUNT_STATE.SIGN_IN;\n\n    React.useEffect(() => {\n        let timeout: NodeJS.Timeout;\n        if (accountState === ACCOUNT_STATE.RE_SIGN_IN) {\n            /** đã đăng nhập từ trước, lấy phiên đăng nhập */\n            restartApi(authentication, (me) => {\n                if (me) {\n                    timeout = setTimeout(() => {\n                        auth.toggleAuth({ isAuth: true, me });\n                    }, TIMING_APP_START);\n                }\n            });\n        }\n        if (accountState === ACCOUNT_STATE.SIGNED_IN && Object.values(AUTH_SCREEN).includes(pathname as any)) {\n            navigate(AUTH_SCREEN.HOME, { replace: true });\n        }\n        return () => clearTimeout(timeout);\n    }, [accountState]);\n\n    switch (accountState) {\n        case ACCOUNT_STATE.SIGNED_IN:\n            return props?.children;\n        case ACCOUNT_STATE.RE_SIGN_IN:\n            return <StartLoading />;\n        default:\n            return <SignInScreen />;\n    }\n}\n\nexport default AuthRoute;\n"],"file":"assets/index-4316d0c6.js"}