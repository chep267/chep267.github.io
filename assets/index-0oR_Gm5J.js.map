{"version":3,"file":"index-0oR_Gm5J.js","sources":["../../src/modules/module-base/utils/helpers/focusInput.ts","../../src/modules/module-messenger/hooks/useCreateThread.ts","../../src/modules/module-messenger/hooks/useListenListMessage.ts","../../src/modules/module-messenger/hooks/useSendMessage.ts","../../src/modules/module-messenger/components/ThreadSearchProvider/index.tsx","../../src/modules/module-messenger/components/ConversationHeader/ConversationName.tsx","../../src/modules/module-messenger/components/ConversationHeader/IconThreadInfo.tsx","../../src/modules/module-messenger/components/ConversationHeader/index.tsx","../../src/modules/module-messenger/components/ConversationBody/index.tsx","../../src/modules/module-messenger/components/ConversationFooter/ButtonSendMessage/index.tsx","../../src/modules/module-messenger/components/EmojiPicker/index.tsx","../../src/modules/module-messenger/components/ConversationFooter/ButtonChooseEmoji/index.tsx","../../src/modules/module-messenger/components/ConversationFooter/InputMessage/index.tsx","../../src/modules/module-messenger/components/ConversationFooter/ButtonChooseFile/index.tsx","../../src/modules/module-messenger/components/ConversationFooter/ListFiles/ImagePreview.tsx","../../src/modules/module-messenger/components/ConversationFooter/ListFiles/index.tsx","../../src/modules/module-messenger/components/ConversationFooter/index.tsx","../../src/modules/module-messenger/components/ThreadTitle/index.tsx","../../src/modules/module-messenger/components/ThreadSearch/index.tsx","../../src/modules/module-messenger/components/ThreadContent/index.tsx","../../src/modules/module-messenger/components/ThreadInfo/index.tsx","../../src/modules/module-messenger/screens/ConversationScreen/styles.ts","../../src/modules/module-messenger/screens/ConversationScreen/ConversationLeft.tsx","../../src/modules/module-messenger/screens/ConversationScreen/ConversationCenter.tsx","../../src/modules/module-messenger/screens/ConversationScreen/ConversationRight.tsx","../../src/modules/module-messenger/screens/ConversationScreen/index.tsx"],"sourcesContent":["/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nexport const focusInput = (elem?: HTMLInputElement | null) => {\n    if (!elem) {\n        return false;\n    }\n    setTimeout(() => {\n        elem.selectionStart = elem.selectionEnd = elem.value?.length;\n        elem?.focus?.();\n    }, 1);\n};\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\n\n/** apis */\nimport { apiCreateThread } from '@module-messenger/apis';\n\n/** utils */\nimport { baseMessage, checkId } from '@module-base/utils';\n\n/** hooks */\nimport { useNotify } from '@module-base/hooks';\nimport { useAuth } from '@module-auth/hooks';\n\n/** types */\nimport type { TypeDocumentThreadData } from '@module-messenger/models';\nimport type { TypeItemIds, TypeItems } from '@module-base/models';\n\ntype TypeListThread =\n    | {\n          itemIds: TypeItemIds;\n          items: TypeItems<TypeDocumentThreadData>;\n      }\n    | undefined;\n\nexport function useCreateThread() {\n    const queryClient = useQueryClient();\n    const AUTH = useAuth();\n    const NOTIFY = useNotify();\n    const uid = AUTH.data.me.uid;\n    const LIST_THREAD: TypeListThread = queryClient.getQueryData(['useListThread', { uid }]);\n\n    return useMutation({\n        mutationFn: (payload: TypeDocumentThreadData) => {\n            const { tid } = payload;\n            const p_uid = checkId(tid, 'uid');\n            const p_tid = checkId(uid, 'tid');\n            let data: TypeDocumentThreadData = { ...payload };\n\n            if (LIST_THREAD?.itemIds?.includes?.(tid)) {\n                const thread = LIST_THREAD?.items?.[tid];\n                data = {\n                    ...thread,\n                    ...data,\n                };\n            }\n\n            return Promise.all([\n                /** create for me */\n                apiCreateThread({\n                    uid,\n                    tid,\n                    data: {\n                        type: 'thread',\n                        members: [uid, p_uid],\n                        ...data,\n                    },\n                }),\n                /** create for partner */\n                apiCreateThread({\n                    uid: p_uid,\n                    tid: p_tid,\n                    data: {\n                        members: [uid, p_uid],\n                        ...data,\n                        tid: p_tid,\n                    },\n                }),\n            ]);\n        },\n        onError: (error) => {\n            console.log('error: ', error);\n            NOTIFY.method.toggleNotify({\n                open: true,\n                mode: 'error',\n                intlMessage: baseMessage['module.base.error.server.busy'],\n            });\n        },\n    });\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport { useQuery } from '@tanstack/react-query';\n\n/** apis */\nimport { apiOnGetListMessage } from '@module-messenger/apis';\n\n/** constants */\nimport { emptyArray, emptyFunction, emptyObject } from '@module-base/constants';\n\n/** hooks */\nimport { useAuth } from '@module-auth/hooks';\n\n/** types */\nimport type { Unsubscribe } from 'firebase/firestore';\nimport type { TypeItemIds, TypeItems } from '@module-base/models';\nimport type { TypeDocumentMessageData } from '@module-messenger/models';\n\nexport function useListenListMessage({ tid }: { tid: string }) {\n    const AUTH = useAuth();\n    const [itemIds, setItemIds] = React.useState<TypeItemIds>(emptyArray);\n    const [items, setItems] = React.useState<TypeItems<TypeDocumentMessageData>>(emptyObject);\n    const uid = AUTH.data.me.uid;\n    const listen = React.useRef<{ unsubscribe?: Unsubscribe }>({ unsubscribe: emptyFunction });\n\n    const LIST_MESSAGE = useQuery({\n        queryKey: ['useListenListMessage', { tid }],\n        queryFn: async () => {\n            listen.current?.unsubscribe?.();\n            const response = await apiOnGetListMessage({\n                tid: `${tid}`,\n                uid,\n                fnCallback: (data) => {\n                    setItemIds(data.itemIds);\n                    setItems(data.items);\n                },\n            });\n            listen.current.unsubscribe = response?.unsubscribe;\n            return response;\n        },\n        enabled: !!tid,\n        refetchOnWindowFocus: false,\n    });\n\n    return {\n        ...LIST_MESSAGE,\n        data: { itemIds, items },\n    };\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport { useMutation } from '@tanstack/react-query';\n\n/** apis */\nimport { apiCreateMessage, apiSendFile } from '@module-messenger/apis';\n\n/** constants */\nimport { MESSENGER_CHAT_BOT_AI_ID, MessageGPT } from '@module-messenger/constants';\n\n/** utils */\nimport { baseMessage, checkId } from '@module-base/utils';\nimport { genMessage } from '@module-messenger/utils';\n\n/** hooks */\nimport { useNotify } from '@module-base/hooks';\nimport { useAuth } from '@module-auth/hooks';\nimport { useCreateThread } from '@module-messenger/hooks';\n\n/** types */\nimport type { TypeDocumentMessageData } from '@module-messenger/models';\n\nexport function useSendMessage() {\n    const AUTH = useAuth();\n    const NOTIFY = useNotify();\n    const CREATE_THREAD = useCreateThread();\n    const uid = AUTH.data.me.uid;\n\n    return useMutation({\n        mutationFn: async ({ tid, draft }: { tid: string; draft: TypeDocumentMessageData }) => {\n            const data = genMessage({ ...draft, tid, uid, isEncrypt: true });\n            if (draft.fileIds.length) {\n                /** send file */\n                const response = await Promise.all(\n                    draft.fileIds.map((fid) => apiSendFile({ tid, mid: data.mid, fid, file: draft.files![fid] }))\n                );\n                const files: TypeDocumentMessageData['files'] = {};\n                response?.map((value) => {\n                    if (value) {\n                        files[value.fid] = {\n                            ...draft.files[value.fid],\n                            fileData: null,\n                            url: value.url,\n                        };\n                    }\n                });\n                data.files = files;\n            }\n            /** send for me */\n            return apiCreateMessage({\n                uid,\n                tid,\n                mid: data.mid,\n                data,\n            });\n        },\n        onSuccess: ({ message }, { tid }) => {\n            if (tid === MESSENGER_CHAT_BOT_AI_ID) {\n                /** chatbot reply */\n                const arrText = MessageGPT['random'];\n                const text = arrText[Math.floor(Math.random() * arrText.length)];\n                const dataGPT = genMessage({ tid, uid: tid, text, isEncrypt: true });\n                apiCreateMessage({\n                    uid,\n                    tid,\n                    mid: dataGPT.mid,\n                    data: dataGPT,\n                }).then();\n            } else {\n                /** send for partner */\n                const p_uid = checkId(tid, 'uid');\n                const p_tid = checkId(uid, 'tid');\n                apiCreateMessage({\n                    uid: p_uid,\n                    tid: p_tid,\n                    mid: message.mid,\n                    data: message,\n                }).then();\n            }\n\n            /** update for thread */\n            CREATE_THREAD.mutate({\n                tid,\n                lastMessage: message,\n            });\n        },\n        onError: (error) => {\n            console.log('error: ', error);\n            NOTIFY.method.toggleNotify({\n                open: true,\n                mode: 'error',\n                intlMessage: baseMessage['module.base.error.server.busy'],\n            });\n        },\n    });\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\n\n/** components */\nimport { ErrorBoundary } from '@module-base/components';\n\n/** utils */\nimport { ThreadSearchContext } from '@module-messenger/hooks';\n\n/** types */\nimport type { ThreadSearchProviderProps, ThreadSearchContextProps } from '@module-messenger/models';\n\nexport default function ThreadSearchProvider(props: ThreadSearchProviderProps) {\n    const { children } = props;\n\n    const [isFocusSearch, setFocusSearch] = React.useState(false);\n    const [searchKey, setSearchKey] = React.useState('');\n    const [isSearching, setSearching] = React.useState(false);\n\n    const store = React.useMemo<ThreadSearchContextProps>(\n        () => ({\n            data: {\n                isFocusSearch,\n                isSearching,\n                searchKey,\n            },\n            method: {\n                setFocusSearch,\n                setSearching,\n                setSearchKey,\n            },\n        }),\n        [isFocusSearch, isSearching, searchKey]\n    );\n\n    return (\n        <ThreadSearchContext.Provider value={store}>\n            <ErrorBoundary isAutoReload>{children}</ErrorBoundary>\n        </ThreadSearchContext.Provider>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport { useParams } from 'react-router-dom';\n\n/** lib components */\nimport { Stack } from '@mui/material';\n\n/** components */\nimport ThreadName from '@module-messenger/components/ThreadName';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ConversationName() {\n    const classes = useStyles();\n    const { tid = '' } = useParams();\n\n    return (\n        <Stack className={classes.header_left}>\n            <ThreadName tid={tid} variant=\"h5\" />\n        </Stack>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\n\n/** lib components */\nimport { IconButton } from '@mui/material';\nimport { Info as InfoIcon } from '@mui/icons-material';\n\n/** hooks */\nimport { useMessenger } from '@module-messenger/hooks';\n\nexport default function IconThreadInfo() {\n    const { method } = useMessenger();\n\n    const onClick = React.useCallback(() => {\n        method.setOpenThreadInfo((prev) => !prev);\n    }, []);\n\n    return (\n        <IconButton onClick={onClick}>\n            <InfoIcon color=\"primary\" />\n        </IconButton>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\n/** lib components */\nimport { Stack, IconButton } from '@mui/material';\nimport { Call as CallIcon, Videocam as VideoCallIcon } from '@mui/icons-material';\n\n/** components */\nimport ConversationName from './ConversationName';\nimport IconThreadInfo from './IconThreadInfo';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ConversationHeader() {\n    const classes = useStyles();\n\n    return (\n        <Stack className={classes.header}>\n            <ConversationName />\n            <Stack className={classes.header_right}>\n                <IconButton>\n                    <CallIcon color=\"primary\" />\n                </IconButton>\n                <IconButton>\n                    <VideoCallIcon color=\"primary\" />\n                </IconButton>\n                <IconThreadInfo />\n            </Stack>\n        </Stack>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\n/** lib components */\nimport { ListItem } from '@mui/material';\n\n/** components */\nimport { ListBase } from '@module-base/components';\nimport Message from '@module-messenger/components/Message';\n\n/** hooks */\nimport { useListenListMessage } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ConversationBody() {\n    const classes = useStyles();\n    const { tid = '' } = useParams();\n    const LIST_MESSAGE = useListenListMessage({ tid });\n    const listRef = React.useRef<HTMLUListElement>(null);\n\n    React.useEffect(() => {\n        if (listRef.current) {\n            setTimeout(() => {\n                if (listRef.current) {\n                    listRef.current.scrollTop = listRef.current.scrollHeight;\n                }\n            }, 200);\n        }\n    }, [LIST_MESSAGE.isFetching, LIST_MESSAGE.data.itemIds]);\n\n    const renderItem = React.useCallback(\n        (mid: string) => {\n            const message = LIST_MESSAGE.data.items[mid];\n            return (\n                <ListItem key={`${tid}-${mid}`} className={classnames(classes.listItem)}>\n                    <Message data={message} />\n                </ListItem>\n            );\n        },\n        [LIST_MESSAGE.data.itemIds, tid]\n    );\n\n    return (\n        <ListBase\n            listRef={listRef}\n            className={classnames(classes.body, 'messenger_left_thread_list_default')}\n            loading={LIST_MESSAGE.isFetching}\n            data={LIST_MESSAGE.data.itemIds}\n            renderItem={renderItem}\n        />\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\n/** lib components */\nimport { FormattedMessage } from 'react-intl';\nimport { IconButton, Tooltip } from '@mui/material';\nimport { Favorite as FavoriteIcon, Send as SendIcon } from '@mui/icons-material';\n\n/** utils */\nimport { genMessage, messengerMessage } from '@module-messenger/utils';\n\n/** hooks */\nimport { useSendMessage, useMessenger } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ButtonSendMessage() {\n    const { tid = '' } = useParams();\n    const classes = useStyles();\n    const SEND_MESSAGE = useSendMessage();\n    const { ui, method } = useMessenger();\n    const draft = ui.drafts[tid];\n\n    const onSendMessage = () => {\n        SEND_MESSAGE.mutate(\n            { tid, draft },\n            {\n                onSuccess: () => {\n                    method.setEmptyThread(tid);\n                },\n                onError: () => {\n                    method.setEmptyThread(tid);\n                },\n            }\n        );\n    };\n\n    const onSendEmoji = React.useCallback(() => {\n        SEND_MESSAGE.mutate({ tid, draft: genMessage({ tid, type: 'emoji' }) });\n    }, [tid]);\n\n    const hasContent = !!draft?.text || !!draft?.fileIds?.length;\n    return (\n        <>\n            <Tooltip\n                title={<FormattedMessage {...messengerMessage['module.messenger.component.button.sendMessage.tooltip']} />}>\n                <IconButton\n                    disabled={SEND_MESSAGE.isPending}\n                    onClick={onSendMessage}\n                    className={classnames(classes.btnSend, { [classes.btnVisible]: hasContent })}>\n                    <SendIcon color=\"primary\" />\n                </IconButton>\n            </Tooltip>\n            <Tooltip\n                title={<FormattedMessage {...messengerMessage['module.messenger.component.button.sendEmoji.tooltip']} />}>\n                <IconButton\n                    disabled={SEND_MESSAGE.isPending}\n                    onClick={onSendEmoji}\n                    className={classnames(classes.btnSend, { [classes.btnVisible]: !hasContent })}>\n                    <FavoriteIcon color=\"primary\" />\n                </IconButton>\n            </Tooltip>\n        </>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport data from '@emoji-mart/data';\n\n/** lib components */\nimport Picker from '@emoji-mart/react';\n\n/** hooks */\nimport { useLanguage } from '@module-language/hooks';\nimport { useTheme } from '@module-theme/hooks';\n\ntype EmojiPickerProps = {\n    onEmojiSelect?(emoji: any, event?: any): void;\n};\n\nexport default function EmojiPicker(props: EmojiPickerProps) {\n    const { onEmojiSelect } = props;\n    const {\n        data: { locale },\n    } = useLanguage();\n    const {\n        data: { mode },\n    } = useTheme();\n\n    return <Picker data={data} onEmojiSelect={onEmojiSelect} locale={locale} theme={mode} />;\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\n/** lib components */\nimport { FormattedMessage } from 'react-intl';\nimport { IconButton, Popover, Tooltip } from '@mui/material';\nimport { EmojiEmotions as EmojiEmotionsIcon } from '@mui/icons-material';\n\n/** components */\nimport EmojiPicker from '@module-messenger/components/EmojiPicker';\n\n/** utils */\nimport { messengerMessage } from '@module-messenger/utils';\n\n/** hooks */\nimport { useMessenger } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\n/** types */\nimport type { ElementClickEvent } from '@module-base/models';\n\nexport default function ButtonChooseEmoji() {\n    const { tid = '' } = useParams();\n    const classes = useStyles();\n    const { method } = useMessenger();\n\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n    const openMenu = React.useCallback((event: ElementClickEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget), []);\n\n    const closeMenu = React.useCallback(() => setAnchorEl(null), []);\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const onEmojiSelect = React.useCallback(\n        (emoji: any) => {\n            if (!tid || !emoji?.native) {\n                return;\n            }\n            method.setText({ tid, text: emoji.native, type: 'emoji' });\n        },\n        [tid]\n    );\n\n    return (\n        <>\n            <Tooltip\n                title={<FormattedMessage {...messengerMessage['module.messenger.component.button.chooseEmoji.tooltip']} />}>\n                <IconButton aria-describedby={id} onClick={openMenu}>\n                    <EmojiEmotionsIcon color=\"primary\" />\n                </IconButton>\n            </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={closeMenu}\n                className={classes.menuPaper}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}>\n                <EmojiPicker onEmojiSelect={onEmojiSelect} />\n            </Popover>\n        </>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\n/** lib components */\nimport { InputAdornment, TextField } from '@mui/material';\n\n/** components */\nimport ButtonChooseEmoji from '@module-messenger/components/ConversationFooter/ButtonChooseEmoji';\n\n/** utils */\nimport { focusInput } from '@module-base/utils';\n\n/** hooks */\nimport { useMessenger } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\n/** type */\n\nexport default function InputMessage() {\n    const { tid = '' } = useParams();\n    const classes = useStyles();\n    const { ui, method } = useMessenger();\n\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const [text, setText] = React.useState('');\n    const draft = tid ? ui.drafts[tid] : null;\n\n    /** effect init text */\n    React.useEffect(() => {\n        if (draft?.text !== text) {\n            setText(draft?.text || '');\n        }\n        focusInput(inputRef.current);\n    }, [tid, draft]);\n\n    /** effect change text */\n    React.useEffect(() => {\n        if (tid && text !== draft?.text) {\n            method.setText({ tid, text });\n        }\n    }, [text]);\n\n    const onChangeValue = React.useCallback((event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setText(event.target.value);\n    }, []);\n\n    const InputProps = React.useMemo(() => {\n        return {\n            endAdornment: (\n                <InputAdornment position=\"end\">\n                    <ButtonChooseEmoji />\n                </InputAdornment>\n            ),\n        };\n    }, []);\n\n    return (\n        <TextField\n            inputRef={inputRef}\n            className={classes.input}\n            placeholder=\"Aa\"\n            size=\"small\"\n            multiline\n            maxRows={5}\n            variant=\"outlined\"\n            spellCheck={false}\n            fullWidth\n            value={text}\n            onChange={onChangeValue}\n            InputProps={InputProps}\n        />\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\n/** lib components */\nimport { FormattedMessage } from 'react-intl';\nimport { IconButton, Tooltip } from '@mui/material';\nimport { Photo as PhotoIcon } from '@mui/icons-material';\n\n/** utils */\nimport { messengerMessage } from '@module-messenger/utils';\n\n/** hooks */\nimport { useMessenger } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\n/** types */\nimport type { ChangeEvent } from 'react';\nimport type { TypeDocumentMessageData } from '@module-messenger/models';\n\nexport default function ButtonChooseFile() {\n    const { tid = '' } = useParams();\n    const classes = useStyles();\n    const { method } = useMessenger();\n\n    const onChange = React.useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const data = event.target.files;\n            if (!tid || !data) {\n                return;\n            }\n\n            const fileIds: TypeDocumentMessageData['fileIds'] = [];\n            const files: TypeDocumentMessageData['files'] = {};\n            for (let i = 0, n = data.length; i < n; ++i) {\n                const fid = `fid.${window.crypto.randomUUID()}`;\n                fileIds.push(fid);\n                files[fid] = {\n                    fileData: data[i],\n                    url: '',\n                    name: data[i].name,\n                    size: data[i].size,\n                    type: data[i].type,\n                };\n            }\n            method.setFiles({ tid, fileIds, files });\n        },\n        [tid]\n    );\n\n    return (\n        <Tooltip title={<FormattedMessage {...messengerMessage['module.messenger.component.button.chooseFile.tooltip']} />}>\n            <IconButton color=\"primary\" className={classes.btnFile} component=\"label\" htmlFor=\"messenge-footer-input-file\">\n                <PhotoIcon />\n                <input\n                    accept=\"image/*\"\n                    className={classes.inputFile}\n                    id=\"messenge-footer-input-file\"\n                    type=\"file\"\n                    multiple={true}\n                    onChange={onChange}\n                />\n            </IconButton>\n        </Tooltip>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\n/** lib components */\nimport { Stack, IconButton } from '@mui/material';\nimport { Close as CloseIcon } from '@mui/icons-material';\n\n/** styles */\nimport useStyles from './styles';\nimport { TypeDocumentMessageData } from '@module-messenger/models';\n\ntype ImagePreviewProps = {\n    fid: string;\n    file?: TypeDocumentMessageData['files'][string];\n    onRemoveFile(fid: string): void;\n};\n\nexport default function ImagePreview(props: ImagePreviewProps) {\n    const { file, fid, onRemoveFile } = props;\n    const classes = useStyles();\n\n    if (!file?.fileData) {\n        return null;\n    }\n\n    return (\n        <Stack className={classes.list_item}>\n            <IconButton className={classes.iconRemove} onClick={() => onRemoveFile(fid)} size=\"small\">\n                <CloseIcon fontSize=\"small\" />\n            </IconButton>\n            <img alt=\"\" src={URL.createObjectURL(file.fileData)} />\n        </Stack>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\n/** lib components */\nimport { Stack } from '@mui/material';\n\n/** components */\nimport ImagePreview from '@module-messenger/components/ConversationFooter/ListFiles/ImagePreview';\n\n/** hooks */\nimport { useMessenger } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ListFiles() {\n    const { tid = '' } = useParams();\n    const classes = useStyles();\n    const { ui, method } = useMessenger();\n\n    const draft = tid ? ui.drafts[tid] : null;\n\n    const onRemoveFile = React.useCallback(\n        (fid: string) => {\n            method.removeFiles({ tid, fileIds: [fid] });\n        },\n        [tid]\n    );\n\n    if (!draft?.fileIds?.length) {\n        return null;\n    }\n\n    return (\n        <Stack className={classes.list_wrap}>\n            {draft.fileIds.map((fid) => {\n                return <ImagePreview key={fid} file={draft?.files?.[fid]} fid={fid} onRemoveFile={onRemoveFile} />;\n            })}\n        </Stack>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport classnames from 'classnames';\n\n/** lib components */\nimport { Stack, IconButton } from '@mui/material';\nimport { Mic as MicIcon } from '@mui/icons-material';\n\n/** components */\nimport ButtonSendMessage from '@module-messenger/components/ConversationFooter/ButtonSendMessage';\nimport InputMessage from '@module-messenger/components/ConversationFooter/InputMessage';\nimport ButtonChooseFile from '@module-messenger/components/ConversationFooter/ButtonChooseFile';\nimport ListFiles from '@module-messenger/components/ConversationFooter/ListFiles';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ConversationFooter() {\n    const classes = useStyles();\n\n    return (\n        <Stack className={classes.footer}>\n            <Stack className={classnames(classes.footer_left, { [classes.footer_left_hidden]: false })}>\n                <ButtonChooseFile />\n                <IconButton onClick={() => {}}>\n                    <MicIcon color=\"primary\" />\n                </IconButton>\n            </Stack>\n            <Stack className={classnames(classes.footer_center, { [classes.footer_center_full]: false })}>\n                <ListFiles />\n                <InputMessage />\n            </Stack>\n            <Stack className={classes.footer_right}>\n                <ButtonSendMessage />\n            </Stack>\n        </Stack>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport classnames from 'classnames';\n\n/** lib components */\nimport { Typography, Stack } from '@mui/material';\nimport { FormattedMessage } from 'react-intl';\n\n/** utils */\nimport { messengerMessage } from '@module-messenger/utils';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ThreadTitle() {\n    const classes = useStyles();\n\n    return (\n        <Stack className={classnames('.ThreadTitle', classes.thread_title)}>\n            <Typography variant=\"h5\">\n                <FormattedMessage {...messengerMessage['module.messenger.component.thread.title']} />\n            </Typography>\n        </Stack>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport classnames from 'classnames';\n\n/** lib components */\nimport { Stack, IconButton } from '@mui/material';\nimport { West as WestIcon } from '@mui/icons-material';\n\n/** components */\nimport { InputSearch } from '@module-base/components';\n\n/** hooks */\nimport { useUiThreadSearch } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ThreadSearch() {\n    const classes = useStyles();\n    const {\n        data: { isFocusSearch },\n        method: { setFocusSearch, setSearching, setSearchKey },\n    } = useUiThreadSearch();\n\n    return (\n        <Stack className={classnames('.ThreadSearch', classes.inputSearch, { [classes.inputSearch_blur]: !isFocusSearch })}>\n            <IconButton onClick={() => setFocusSearch(false)}>\n                <WestIcon />\n            </IconButton>\n            <InputSearch onFocus={() => setFocusSearch(true)} onChangeValue={setSearchKey} onLoading={setSearching} />\n        </Stack>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport classnames from 'classnames';\n\n/** lib components */\nimport { Box } from '@mui/material';\n\n/** components */\nimport ThreadList from '@module-messenger/components/ThreadList';\nimport ThreadListSearch from '@module-messenger/components/ThreadListSearch';\n\n/** hooks */\nimport { useUiThreadSearch } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ThreadContent() {\n    const classes = useStyles();\n    const {\n        data: { isFocusSearch },\n    } = useUiThreadSearch();\n\n    return (\n        <Box className={classnames(classes.thread_content, { [classes.thread_content_focus_search]: isFocusSearch })}>\n            <ThreadList />\n            <ThreadListSearch />\n        </Box>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport { useParams } from 'react-router-dom';\n\n/** lib components */\nimport { Stack } from '@mui/material';\n\n/** styles */\nimport useStyles from './styles';\nimport ThreadName from '@module-messenger/components/ThreadName';\nimport ThreadAvatar from '@module-messenger/components/ThreadAvatar';\n\nexport default function ThreadInfo() {\n    const classes = useStyles();\n    const { tid = '' } = useParams();\n\n    return (\n        <Stack className={classes.thread_info}>\n            <ThreadAvatar tid={tid} className={classes.avatar} />\n            <ThreadName tid={tid} variant=\"h6\" pt={2} />\n        </Stack>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 24/08/2023.\n *\n */\n\nimport makeStyles from '@mui/styles/makeStyles';\n\n/** constants */\nimport { SCREEN_SIZE } from '@module-global/constants';\n\nconst useStyles = makeStyles(({ palette, breakpoints, zIndex }) => ({\n    screen: {\n        position: 'relative',\n        flexDirection: 'row',\n        width: '100%',\n        height: '100%',\n    },\n    layoutDefault: {\n        display: 'flex',\n        position: 'relative',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%',\n        height: '100%',\n        borderRadius: 0,\n        overflow: 'hidden',\n    },\n    left: {\n        maxWidth: SCREEN_SIZE.MESSENGER_LEFT_RIGHT_MAX_WIDTH,\n        transition: 'all 0.3s ease-in-out, background-color 0s',\n        [breakpoints.down('xl')]: {\n            minWidth: SCREEN_SIZE.MESSENGER_LEFT_MEDIUM_WIDTH,\n            maxWidth: SCREEN_SIZE.MESSENGER_LEFT_MEDIUM_WIDTH,\n        },\n        [breakpoints.down('md')]: {\n            minWidth: SCREEN_SIZE.MESSENGER_LEFT_MIN_WIDTH,\n            maxWidth: SCREEN_SIZE.MESSENGER_LEFT_MIN_WIDTH,\n            '& div[class*=\".ThreadTitle\"], div[class*=\".ThreadSearch\"]': {\n                position: 'absolute',\n                zIndex: -1,\n                visibility: 'hidden',\n            },\n            '& li[class*=\".ThreadItem\"]': {\n                '& > div:last-of-type, button': {\n                    visibility: 'hidden',\n                    width: 0,\n                },\n            },\n        },\n        [breakpoints.down('sm')]: {\n            minWidth: 0,\n            maxWidth: 0,\n        },\n    },\n    right: {\n        borderLeft: `1px solid ${palette.divider}`,\n        maxWidth: SCREEN_SIZE.MESSENGER_LEFT_RIGHT_MAX_WIDTH,\n        transition: 'all 0.3s ease-in-out, height 0s, background-color 0s',\n        [breakpoints.down('xl')]: {\n            minWidth: SCREEN_SIZE.MESSENGER_LEFT_MEDIUM_WIDTH,\n            maxWidth: SCREEN_SIZE.MESSENGER_LEFT_MEDIUM_WIDTH,\n        },\n        [breakpoints.down('lg')]: {\n            position: 'fixed',\n            top: SCREEN_SIZE.HEADER_HEIGHT + SCREEN_SIZE.MESSENGER_CENTER_HEADER_HEIGHT,\n            right: 0,\n            zIndex: zIndex.drawer,\n            minWidth: SCREEN_SIZE.MESSENGER_LEFT_MEDIUM_WIDTH,\n            maxWidth: SCREEN_SIZE.MESSENGER_LEFT_MEDIUM_WIDTH,\n            maxHeight: `calc(100% - ${SCREEN_SIZE.HEADER_HEIGHT + SCREEN_SIZE.MESSENGER_CENTER_HEADER_HEIGHT}px)`,\n        },\n    },\n    center: {\n        borderLeft: `1px solid ${palette.divider}`,\n    },\n    right_hidden: {\n        minWidth: 0,\n        maxWidth: 0,\n        visibility: 'hidden',\n        zIndex: -1,\n        border: 'none',\n    },\n}));\n\nexport default useStyles;\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport classnames from 'classnames';\n\n/** lib components */\nimport { Paper } from '@mui/material';\n\n/** components */\nimport { ThreadSearchProvider, ThreadTitle, ThreadSearch, ThreadContent } from '@module-messenger/components';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ConversationLeft() {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classnames(classes.layoutDefault, classes.left)}>\n            <ThreadTitle />\n            <ThreadSearchProvider>\n                <ThreadSearch />\n                <ThreadContent />\n            </ThreadSearchProvider>\n        </Paper>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport classnames from 'classnames';\n\n/** lib components */\nimport { Paper } from '@mui/material';\n\n/** components */\nimport { ConversationHeader, ConversationBody, ConversationFooter } from '@module-messenger/components';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ConversationCenter() {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classnames(classes.layoutDefault, classes.center)}>\n            <ConversationHeader />\n            <ConversationBody />\n            <ConversationFooter />\n        </Paper>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport classnames from 'classnames';\n\n/** lib components */\nimport { Paper } from '@mui/material';\n\n/** components */\nimport { ThreadInfo } from '@module-messenger/components';\n\n/** hooks */\nimport { useMessenger } from '@module-messenger/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ConversationRight() {\n    const classes = useStyles();\n    const { ui } = useMessenger();\n\n    return (\n        <Paper\n            className={classnames(classes.layoutDefault, classes.right, {\n                [classes.right_hidden]: !ui.openThreadInfo,\n            })}>\n            <ThreadInfo />\n        </Paper>\n    );\n}\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\n/** lib components */\nimport { Stack } from '@mui/material';\n\n/** components */\nimport ConversationLeft from './ConversationLeft';\nimport ConversationCenter from './ConversationCenter';\nimport ConversationRight from './ConversationRight';\n\n/** styles */\nimport useStyles from './styles';\n\nexport default function ConversationScreen() {\n    const classes = useStyles();\n\n    return (\n        <Stack className={classes.screen}>\n            <ConversationLeft />\n            <ConversationCenter />\n            <ConversationRight />\n        </Stack>\n    );\n}\n"],"names":["focusInput","elem","useCreateThread","queryClient","useQueryClient","AUTH","useAuth","NOTIFY","useNotify","uid","LIST_THREAD","useMutation","payload","tid","p_uid","checkId","p_tid","data","apiCreateThread","error","baseMessage","useListenListMessage","itemIds","setItemIds","React.useState","emptyArray","items","setItems","emptyObject","listen","React.useRef","emptyFunction","useQuery","response","apiOnGetListMessage","useSendMessage","CREATE_THREAD","draft","genMessage","fid","apiSendFile","files","value","apiCreateMessage","message","MESSENGER_CHAT_BOT_AI_ID","arrText","MessageGPT","text","dataGPT","ThreadSearchProvider","props","children","isFocusSearch","setFocusSearch","searchKey","setSearchKey","isSearching","setSearching","store","React.useMemo","jsx","ThreadSearchContext","ErrorBoundary","ConversationName","classes","useStyles","useParams","Stack","ThreadName","IconThreadInfo","method","useMessenger","onClick","React.useCallback","prev","IconButton","InfoIcon","ConversationHeader","jsxs","CallIcon","VideoCallIcon","ConversationBody","LIST_MESSAGE","listRef","React.useEffect","renderItem","mid","ListItem","classnames","Message","ListBase","ButtonSendMessage","SEND_MESSAGE","ui","onSendMessage","onSendEmoji","hasContent","Fragment","Tooltip","FormattedMessage","messengerMessage","SendIcon","FavoriteIcon","EmojiPicker","onEmojiSelect","locale","useLanguage","mode","useTheme","Picker","ButtonChooseEmoji","anchorEl","setAnchorEl","openMenu","event","closeMenu","open","id","emoji","EmojiEmotionsIcon","Popover","InputMessage","inputRef","setText","onChangeValue","InputProps","InputAdornment","TextField","ButtonChooseFile","onChange","fileIds","i","n","PhotoIcon","ImagePreview","file","onRemoveFile","CloseIcon","ListFiles","ConversationFooter","MicIcon","ThreadTitle","Typography","ThreadSearch","useUiThreadSearch","WestIcon","InputSearch","ThreadContent","Box","ThreadList","ThreadListSearch","ThreadInfo","ThreadAvatar","makeStyles","palette","breakpoints","zIndex","SCREEN_SIZE","styles_default","ConversationLeft","Paper","ConversationCenter","ConversationRight","ConversationScreen"],"mappings":"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"}