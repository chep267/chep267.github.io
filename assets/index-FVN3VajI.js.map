{"version":3,"mappings":"gGAMO,MAAMA,EAAgB,OAAO,OAAO,CACvC,UAAW,0BACX,WAAY,2BACZ,QAAS,uBACb,CAAC,ECJYC,EAAc,OAAO,OAAO,CACrC,KAAM,GACN,QAAS,UACT,WAAY,eACZ,SAAU,YACV,QAAS,WACT,WAAY,6BAChB,CAAC,ECYKC,EAAcC,EAAM,KAAK,IAAMC,EAAA,WAAO,qBAAsC,uCAAC,EAC7EC,EAAeF,EAAM,KAAK,IAAMC,EAAA,WAAO,qBAAmC,2BAAC,EAEjF,SAASE,EAAUC,EAA0B,CACnC,MAAE,SAAAC,GAAaC,IACfC,EAAWC,IACXC,EAAOC,IACPC,EAAcC,EAAQ,IAAIC,CAAoB,EAE9CC,EAAeL,EAAK,KAAK,OACzBZ,EAAc,UACdc,EACEd,EAAc,WACdA,EAAc,QActB,OAZAkB,YAAgB,IAAM,CACdD,IAAiBjB,EAAc,YAEpBmB,EAAA,CACP,WAAaC,GAAOR,EAAK,OAAO,QAAQ,CAAE,OAAQ,GAAM,GAAAQ,EAAI,EAC/D,EAAE,KAAK,EAERH,IAAiBjB,EAAc,WAAa,OAAO,OAAOC,CAAW,EAAE,SAASO,CAAe,GAC/FE,EAAST,EAAY,KAAM,CAAE,QAAS,EAAM,EAChD,EACD,CAACgB,CAAY,CAAC,EAETA,EAAc,CAClB,KAAKjB,EAAc,UACf,OAAOO,GAAO,SAClB,KAAKP,EAAc,WACf,aAAQE,EAAY,IACxB,QACI,aAAQG,EAAa,GAC7B,CACJ,CAEA,IAAOgB,EAAQf","names":["ACCOUNT_STATE","AUTH_SCREEN","StartScreen","React.lazy","__vitePreload","SignInScreen","AuthRoute","props","pathname","useLocation","navigate","useNavigate","AUTH","useAuth","accessToken","Cookies","accessTokenCookieKey","accountState","React.useEffect","apiRestart","me","AuthRoute_default"],"sources":["../../src/modules/module-auth/constants/accountState.ts","../../src/modules/module-auth/constants/screen.ts","../../src/modules/module-auth/screens/AuthRoute/index.tsx"],"sourcesContent":["/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nexport const ACCOUNT_STATE = Object.freeze({\n    SIGNED_IN: 'ACCOUNT_STATE_SIGNED_IN',\n    RE_SIGN_IN: 'ACCOUNT_STATE_RE_SIGN_IN',\n    SIGN_IN: 'ACCOUNT_STATE_SIGN_IN',\n});\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nexport const AUTH_SCREEN = Object.freeze({\n    HOME: '',\n    SIGN_IN: '/signin',\n    VERIFY_OTP: '/verify-code',\n    REGISTER: '/register',\n    RECOVER: '/recover',\n    RESET_PASS: 'password/reset-verification',\n});\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport Cookies from 'js-cookie';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n/** apis */\nimport { apiRestart } from '@module-auth/apis';\n\n/** constants */\nimport { accessTokenCookieKey } from '@module-base/constants/localStoreKey';\nimport { ACCOUNT_STATE } from '@module-auth/constants/accountState';\nimport { AUTH_SCREEN } from '@module-auth/constants/screen';\n\n/** hooks */\nimport { useAuth } from '@module-auth/hooks/useAuth';\n\n/** types */\nimport type { PropsWithChildren } from 'react';\n\n/** screens */\nconst StartScreen = React.lazy(() => import('@module-base/components/StartLoading'));\nconst SignInScreen = React.lazy(() => import('@module-auth/screens/SignInScreen'));\n\nfunction AuthRoute(props: PropsWithChildren) {\n    const { pathname } = useLocation();\n    const navigate = useNavigate();\n    const AUTH = useAuth();\n    const accessToken = Cookies.get(accessTokenCookieKey);\n\n    const accountState = AUTH.data.isAuth\n        ? ACCOUNT_STATE.SIGNED_IN\n        : accessToken\n          ? ACCOUNT_STATE.RE_SIGN_IN\n          : ACCOUNT_STATE.SIGN_IN;\n\n    React.useEffect(() => {\n        if (accountState === ACCOUNT_STATE.RE_SIGN_IN) {\n            /** đã đăng nhập từ trước, lấy phiên đăng nhập */\n            apiRestart({\n                fnCallback: (me) => AUTH.method.setAuth({ isAuth: true, me }),\n            }).then();\n        }\n        if (accountState === ACCOUNT_STATE.SIGNED_IN && Object.values(AUTH_SCREEN).includes(pathname as any)) {\n            navigate(AUTH_SCREEN.HOME, { replace: true });\n        }\n    }, [accountState]);\n\n    switch (accountState) {\n        case ACCOUNT_STATE.SIGNED_IN:\n            return props?.children;\n        case ACCOUNT_STATE.RE_SIGN_IN:\n            return <StartScreen />;\n        default:\n            return <SignInScreen />;\n    }\n}\n\nexport default AuthRoute;\n"],"file":"assets/index-FVN3VajI.js"}