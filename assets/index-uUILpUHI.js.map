{"version":3,"file":"index-uUILpUHI.js","sources":["../../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../../node_modules/tsparticles-engine/esm/Utils/Utils.js","../../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../../node_modules/tsparticles-engine/esm/Core/Canvas.js","../../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../../node_modules/tsparticles-engine/esm/Core/Particle.js","../../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../../node_modules/tsparticles-engine/esm/Core/Particles.js","../../node_modules/tsparticles-engine/esm/Core/Retina.js","../../node_modules/tsparticles-engine/esm/Core/Container.js","../../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../../node_modules/tsparticles-engine/esm/Core/Engine.js","../../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../../node_modules/tsparticles-engine/esm/init.js","../../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../../node_modules/tsparticles-engine/esm/index.js","../../node_modules/react-tsparticles/esm/Utils.js","../../node_modules/react-tsparticles/esm/Particles.js","../../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../../node_modules/tsparticles-particles.js/esm/index.js","../../node_modules/tsparticles-move-base/esm/Utils.js","../../node_modules/tsparticles-move-base/esm/BaseMover.js","../../node_modules/tsparticles-move-base/esm/index.js","../../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../../node_modules/tsparticles-shape-circle/esm/index.js","../../node_modules/tsparticles-updater-color/esm/Utils.js","../../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../../node_modules/tsparticles-updater-color/esm/index.js","../../node_modules/tsparticles-updater-opacity/esm/Utils.js","../../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../../node_modules/tsparticles-updater-opacity/esm/index.js","../../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../../node_modules/tsparticles-updater-out-modes/esm/index.js","../../node_modules/tsparticles-updater-size/esm/Utils.js","../../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../../node_modules/tsparticles-updater-size/esm/index.js","../../node_modules/tsparticles-basic/esm/index.js","../../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../../node_modules/tsparticles-interaction-external-attract/esm/index.js","../../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../../node_modules/tsparticles-interaction-external-connect/esm/index.js","../../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../../node_modules/tsparticles-interaction-external-grab/esm/index.js","../../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../../node_modules/tsparticles-interaction-external-pause/esm/index.js","../../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../../node_modules/tsparticles-interaction-external-push/esm/index.js","../../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../../node_modules/tsparticles-interaction-external-remove/esm/index.js","../../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../../node_modules/tsparticles-interaction-external-slow/esm/index.js","../../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../../node_modules/tsparticles-shape-image/esm/Utils.js","../../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../../node_modules/tsparticles-shape-image/esm/index.js","../../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../../node_modules/tsparticles-updater-life/esm/index.js","../../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../../node_modules/tsparticles-shape-line/esm/index.js","../../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../../node_modules/tsparticles-move-parallax/esm/index.js","../../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../../node_modules/tsparticles-interaction-particles-links/esm/index.js","../../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../../node_modules/tsparticles-shape-polygon/esm/index.js","../../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../../node_modules/tsparticles-updater-rotate/esm/index.js","../../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../../node_modules/tsparticles-shape-square/esm/index.js","../../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../../node_modules/tsparticles-shape-star/esm/index.js","../../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../../node_modules/tsparticles-updater-stroke-color/esm/index.js","../../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../../node_modules/tsparticles-shape-text/esm/index.js","../../node_modules/tsparticles-slim/esm/index.js","../../src/modules/module-base/utils/helpers/particleOptions.ts","../../src/modules/module-base/components/Particles/index.tsx"],"sourcesContent":["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","/**\n *\n * @author dongntd267@gmail.com on 01/12/2022.\n *\n */\n\n/** types */\nimport type { Theme } from '@mui/material';\nimport type { ISourceOptions } from 'tsparticles-engine';\n\nexport const getOption = (theme: Theme): ISourceOptions => ({\n    fullScreen: {\n        enable: true,\n        zIndex: 1,\n    },\n    autoPlay: true,\n    background: {\n        color: {\n            value: theme.palette.background.default,\n        },\n        image: '',\n        position: '',\n        repeat: '',\n        size: '',\n        opacity: 1,\n    },\n    backgroundMask: {\n        composite: 'destination-out',\n        cover: {\n            color: {\n                value: '#fff',\n            },\n            opacity: 1,\n        },\n        enable: false,\n    },\n    backgroundMode: {\n        enable: true,\n        zIndex: 1,\n    },\n    detectRetina: true,\n    fpsLimit: 60,\n    infection: {\n        cure: true,\n        delay: 0,\n        enable: false,\n        infections: 0,\n        stages: [],\n    },\n    interactivity: {\n        detectsOn: 'window',\n        events: {\n            onClick: {\n                enable: false,\n                mode: [],\n            },\n            onDiv: {\n                selectors: [],\n                enable: false,\n                mode: [],\n                type: 'circle',\n            },\n            onHover: {\n                enable: false,\n                mode: 'attract',\n                parallax: {\n                    enable: false,\n                    force: 2,\n                    smooth: 10,\n                },\n            },\n            resize: false,\n        },\n        modes: {\n            attract: {\n                distance: 200,\n                duration: 0.4,\n                speed: 1,\n            },\n            bounce: {\n                distance: 200,\n            },\n            bubble: {\n                distance: 200,\n                duration: 0.4,\n            },\n            connect: {\n                distance: 80,\n                links: {\n                    opacity: 0.5,\n                },\n                radius: 60,\n            },\n            grab: {\n                distance: 100,\n                links: {\n                    blink: false,\n                    consent: false,\n                    opacity: 1,\n                },\n            },\n            light: {\n                area: {\n                    gradient: {\n                        start: {\n                            value: '#ffffff',\n                        },\n                        stop: {\n                            value: '#000000',\n                        },\n                    },\n                    radius: 1000,\n                },\n                shadow: {\n                    color: {\n                        value: '#000000',\n                    },\n                    length: 2000,\n                },\n            },\n            push: {\n                quantity: 4,\n            },\n            remove: {\n                quantity: 2,\n            },\n            repulse: {\n                distance: 200,\n                duration: 0.4,\n                speed: 1,\n            },\n            slow: {\n                factor: 3,\n                radius: 200,\n            },\n            trail: {\n                delay: 0.005,\n                quantity: 5,\n                particles: {\n                    color: {\n                        value: '#ff0000',\n                        animation: {\n                            enable: true,\n                            speed: 400,\n                            sync: true,\n                        },\n                    },\n                    collisions: {\n                        enable: false,\n                        bounce: {\n                            horizontal: {\n                                random: {},\n                            },\n                            vertical: {\n                                random: {},\n                            },\n                        },\n                    },\n                    links: {\n                        enable: false,\n                        shadow: {},\n                        triangles: {},\n                    },\n                    move: {\n                        outMode: 'destroy',\n                        speed: 5,\n                        angle: {},\n                        attract: {\n                            rotate: {},\n                        },\n                        gravity: {},\n                        noise: {\n                            delay: {\n                                random: {},\n                            },\n                        },\n                        outModes: {},\n                        trail: {},\n                    },\n                    size: {\n                        value: 5,\n                        animation: {\n                            enable: true,\n                            speed: 5,\n                            minimumValue: 1,\n                            sync: true,\n                            startValue: 'min',\n                            destroy: 'max',\n                        },\n                        random: {},\n                    },\n                    bounce: {\n                        horizontal: {\n                            random: {},\n                        },\n                        vertical: {\n                            random: {},\n                        },\n                    },\n                    life: {\n                        delay: {\n                            random: {},\n                        },\n                        duration: {\n                            random: {},\n                        },\n                    },\n                    number: {\n                        density: {},\n                    },\n                    opacity: {\n                        animation: {},\n                        random: {},\n                    },\n                    rotate: {\n                        animation: {},\n                    },\n                    shadow: {\n                        offset: {},\n                    },\n                    shape: {},\n                    stroke: {\n                        color: {\n                            value: '',\n                            animation: {\n                                enable: false,\n                                speed: 0,\n                                sync: false,\n                            },\n                        },\n                    },\n                    twinkle: {\n                        lines: {},\n                        particles: {},\n                    },\n                },\n            },\n        },\n    },\n    manualParticles: [],\n    motion: {\n        disable: false,\n        reduce: {\n            factor: 16,\n            value: true,\n        },\n    },\n    particles: {\n        bounce: {\n            horizontal: {\n                random: {\n                    enable: false,\n                    minimumValue: 12,\n                },\n                value: 1,\n            },\n            vertical: {\n                random: {\n                    enable: false,\n                    minimumValue: 0.1,\n                },\n                value: 1,\n            },\n        },\n        collisions: {\n            bounce: {\n                horizontal: {\n                    random: {\n                        enable: false,\n                        minimumValue: 0.1,\n                    },\n                    value: 1,\n                },\n                vertical: {\n                    random: {\n                        enable: false,\n                        minimumValue: 0.1,\n                    },\n                    value: 1,\n                },\n            },\n            enable: true,\n            mode: 'bounce',\n        },\n        color: {\n            value: theme.palette.primary.main,\n            animation: {\n                enable: false,\n                speed: 100,\n                sync: false,\n            },\n        },\n        life: {\n            count: 37,\n            delay: {\n                random: {\n                    enable: false,\n                    minimumValue: 0,\n                },\n                value: 0,\n                sync: false,\n            },\n            duration: {\n                random: {\n                    enable: false,\n                    minimumValue: 0.0001,\n                },\n                value: 0,\n                sync: true,\n            },\n        },\n        links: {\n            blink: true,\n            color: {\n                value: 'random',\n            },\n            consent: false,\n            distance: 100,\n            enable: true,\n            frequency: 0,\n            opacity: 1,\n            shadow: {\n                blur: false,\n                color: {\n                    value: '#00ff00',\n                },\n                enable: false,\n            },\n            triangles: {\n                enable: false,\n                frequency: 0,\n            },\n            width: 1,\n            warp: false,\n        },\n        move: {\n            angle: {\n                offset: 45,\n                value: 90,\n            },\n            attract: {\n                enable: false,\n                rotate: {\n                    x: 3000,\n                    y: 3000,\n                },\n            },\n            direction: 'none',\n            distance: 0,\n            enable: true,\n            gravity: {\n                acceleration: 9.81,\n                enable: false,\n                maxSpeed: 50,\n            },\n            noise: {\n                delay: {\n                    random: {\n                        enable: false,\n                        minimumValue: 0,\n                    },\n                    value: 0,\n                },\n                enable: false,\n            },\n            outModes: {\n                default: 'out',\n            },\n            random: false,\n            size: false,\n            speed: 2,\n            straight: false,\n            trail: {\n                enable: false,\n                length: 10,\n                fillColor: {\n                    value: '#000000',\n                },\n            },\n            vibrate: false,\n            warp: false,\n        },\n        number: {\n            density: {\n                enable: true,\n                area: 800,\n                factor: 1000,\n            },\n            limit: 0,\n            value: 100,\n        },\n        opacity: {\n            random: {\n                enable: true,\n                minimumValue: 0.3,\n            },\n            value: 0.8,\n            animation: {\n                enable: true,\n                minimumValue: 0.3,\n                speed: 0.5,\n                sync: false,\n            },\n        },\n        reduceDuplicates: false,\n        rotate: {\n            random: false,\n            value: 0,\n            animation: {\n                enable: false,\n                speed: 0,\n                sync: false,\n            },\n            direction: 'clockwise',\n            path: false,\n        },\n        shadow: {\n            blur: 51,\n            color: {\n                value: '#000000',\n            },\n            enable: false,\n            offset: {\n                x: 0,\n                y: 0,\n            },\n        },\n        shape: {\n            options: {},\n            type: 'circle',\n        },\n        size: {\n            random: {\n                enable: true,\n                minimumValue: 1,\n            },\n            value: 3,\n            animation: {\n                destroy: 'none',\n                enable: true,\n                minimumValue: 1,\n                speed: 3,\n                startValue: 'max',\n                sync: false,\n            },\n        },\n        stroke: {\n            width: 0,\n            color: {\n                value: '',\n                animation: {\n                    enable: false,\n                    speed: 0,\n                    sync: false,\n                },\n            },\n        },\n        twinkle: {\n            lines: {\n                enable: false,\n                frequency: 0.05,\n                opacity: 1,\n            },\n            particles: {\n                enable: false,\n                frequency: 13,\n                opacity: 1,\n            },\n        },\n    },\n    pauseOnBlur: false,\n    pauseOnOutsideViewport: true,\n    themes: [],\n});\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadSlim } from 'tsparticles-slim';\nimport { useTheme } from '@mui/material/styles';\n\n/** constants */\nimport { getOption } from '@module-base/utils/helpers/particleOptions';\n\n/** types */\nimport type { Engine } from 'tsparticles-engine';\nimport type { IParticlesProps } from 'react-tsparticles/types/IParticlesProps';\n\nconst Particle = React.memo((props: IParticlesProps) => {\n    const { options: Options } = props;\n    const theme = useTheme();\n    const id = React.useId();\n\n    const particlesInit = React.useCallback(async (engine: Engine) => {\n        await loadSlim(engine);\n    }, []);\n\n    const options = Options || getOption(theme);\n\n    return <Particles id={`Particles-${id}`} init={particlesInit} options={options} />;\n});\n\nParticle.displayName = 'Particle';\nexport default Particle;\n"],"names":["generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","Vector3d","xOrCoords","y","z","angle","length","isNumber","coords3d","source","x","v","n","c","v3d","Vector","_random","easings","addEasing","name","easing","getEasing","value","getRandom","clamp","num","min","max","mix","comp1","comp2","weight1","weight2","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","setRangeValue","getValue","options","random","enable","minimumValue","isBoolean","getDistances","pointA","pointB","dx","dy","getDistance","getParticleDirectionAngle","direction","position","center","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","data","parseAlpha","input","_logger","getLogger","rectSideBounce","res","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","checkSelector","element","selectors","executeOnSingleOrMultiple","selector","isArray","t","isSsr","hasMatchMedia","safeMatchMedia","query","safeMutationObserver","callback","isInArray","array","loadFont","font","weight","arrayRandomIndex","itemFromArray","index","useIndex","isPointInside","point","size","offset","radius","areBoundsInside","calculateBounds","bounds","inside","deepExtend","destination","sources","isObject","sourceIsArray","key","sourceDict","destDict","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","div","divMode","singleDivModeExecute","circleBounceDataFromParticle","p","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","pPos","resH","resV","obj","item","itemFromSingleOrMultiple","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","autoStatus","getPositionOrSize","positionOrSize","canvasSize","_","rest","getPosition","arg","isString","isFunction","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","q","stringToRgba","shorthandRegex","hexFixed","g","b","a","regex","result","rangeColorToRgb","color","colorToRgb","getRandomRgbColor","stringToRgb","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","hslToRgb","hsl","hslPercent","hslaToRgba","hsla","rgbResult","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","drawLine","context","begin","end","drawTriangle","p3","paintBase","dimension","baseColor","paintImage","image","clear","drawParticle","container","delta","colorStyles","backgroundMask","composite","shadow","transform","pos","rotateData","transformData","shadowColor","strokeWidth","drawShape","drawShapeAfterEffect","drawer","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","setTransformValue","newFactor","newValue","Canvas","updater","ctx","zOpacity","fill","stroke","updaterTransform","fColor","sColor","cover","coverRgb","coverColor","trail","trailFill","fillColor","resolve","reject","img","evt","observer","originalStyle","style","priority","cb","pfColor","psColor","zIndexOptions","zOpacityFactor","strokeOpacity","zStrokeOpacity","obs","records","record","background","elementStyle","canvas","newSize","oldSize","needsRefresh","manageListener","event","handler","add","addOptions","removeOptions","EventListeners","e","mouseInteractivity","mousePos","onClick","mediaEvent","defaultThemes","themeName","theme","mouseLeaveTmpEvent","handlers","interactivityEl","html","canvasEl","detectType","mediaMatch","entries","interactivity","mouse","handled","mousePosition","mouseEvent","clientRect","target","sourceRect","targetRect","canvasRect","touchEvent","lastTouch","touches","touch","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","ids","Parallax","HoverEvent","ResizeEvent","Events","onDiv","tmp","Modes","engine","interactors","interactor","Interactivity","detectsOn","ManualParticle","Responsive","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","AnimationOptions","RangedAnimationOptions","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","MovePath","MoveTrailFill","MoveTrail","OutModes","Spin","Move","outModes","OpacityAnimation","Opacity","ParticlesDensity","width","height","ParticlesNumber","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","mainKey","altKey","altOverride","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_value","shape","SizeAnimation","Size","Stroke","ZIndex","ParticlesOptions","group","collisions","strokeToLoad","updaters","loadOptions","sourceOptionsArr","sourceOptions","loadParticlesOptions","Options","preset","detectRetina","fpsLimit","fullScreen","responsive","optResponsive","existingTheme","optTheme","defaultOptions","responsiveOptions","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","fixOutMode","diameter","Particle$1","id","overrideOptions","zIndex","tryCount","pluginPos","exactPosition","fixHorizontal","outMode","fixVertical","moveOptions","rad","radOffset","range","collisionsOptions","overlapOptions","retries","backFactor","backSum","zIndexValue","shapeOptions","reduceDuplicates","shapeData","override","pathGenerator","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","particles","sideCountFunc","mover","Point","Range","Rectangle","w","h","Circle","w2","h2","distPos","rSum","dist","QuadTree","rectangle","capacity","i","sub","check","found","qTreeCapacity","qTreeRectangle","Particles$2","manualCount","numberOptions","densityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","densityOptions","initializer","Particle","canAdd","zIdx","countToRemove","condition","groupOptions","j","nb","quantity","deleted","groups","particlesToDelete","resizeFactor","checkDelete","zArray","Retina","ratio","moveDistance","props","maxDistance","guardCheck","initDelta","smooth","loadContainerOptions","defaultPathGeneratorKey","defaultPathGenerator","Container","entry","timestamp","Particles","el","clickOrTouchHandler","posRetina","clickHandler","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchCancelHandler","generator","mainArr","idx","force","refreshTime","shapes","availablePlugins","needsUpdate","noiseOrGenerator","init","update","pathOrGenerator","oldGenerator","newMaxWidth","EventDispatcher","listener","arr","args","listeners","getItemsFromInitializer","map","initializers","Plugins","initInteractor","initMover","initUpdater","presetKey","types","getDataFromUrl","url","response","isParamsEmpty","params","isParams","Engine","config","nameOrConfig","interactorInitializer","refresh","moverInitializer","updaterInitializer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realRefresh","realInit","realAfterEffect","realDestroy","dom","tagIdOrOptionsOrParams","optionsOrIndex","tagId","pathConfigJson","domItem","domContainer","currentOptions","oldIndex","old","existingCanvases","newItem","HslColorManager","RgbColorManager","rgbColor","rgbColorManager","hslColorManager","ExternalInteractorBase","ParticlesInteractorBase","tsParticles","val","deepCompare","obj1","obj2","excludeKeyFn","keys1","keys2","value1","value2","deepCompareArrays","arr1","arr2","val1","val2","defaultId","Component","nextProps","nextOptions","className","canvasClassName","React","initParticlesJS","particlesJS","pJSDom","initPjs","applyDistance","initialPosition","dxFixed","dyFixed","hDistance","vDistance","vel","move","moveSpeed","maxSpeed","moveDrift","applyPath","gravityOptions","gravityFactor","decay","zVelocityFactor","spin","updateFunc","maxCanvasSize","path","getProximitySpeedFactor","diffFactor","BaseMover","spinOptions","spinPos","spinCenter","distance","spinAcceleration","particleOptions","slowFactor","baseSpeed","maxSize","sizeFactor","loadBaseMover","CircleDrawer","circleRange","loadCircleShape","updateColorValue","valueAnimation","decrease","updateColor","hAnimation","sAnimation","lAnimation","s","ColorUpdater","loadColorUpdater","checkDestroy","minValue","maxValue","updateOpacity","OpacityUpdater","opacityOptions","opacityAnimation","loadOpacityUpdater","bounceHorizontal","bounced","newVelocity","minPos","bounceVertical","BounceOutMode","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","loadOutModesUpdater","updateSize","sizeVelocity","SizeUpdater","sizeOptions","sizeAnimation","loadSizeUpdater","loadBasic","loadEasingQuadPlugin","Attract","attract","attractRadius","area","attractOptions","attractFactor","normVec","mouseMoveStatus","events","hoverEnabled","hoverMode","clickEnabled","clickMode","loadExternalAttractInteraction","Attractor","Bounce","Bouncer","tolerance","elem","bounce","loadExternalBounceInteraction","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","mouseClickPos","bubbleOptions","bubble","distMouse","timeSpent","sizeData","opacityData","pointDistance","divBubble","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","pOpacity","modeSize","optSize","pSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","repulseRadius","onHover","loadExternalBubbleInteraction","ConnectLinks","Connect","gradient","gradStop","sourcePos","destPos","midRgb","grad","drawConnectLine","lineStyle","connectOptions","drawConnection","ls","Connector","connect","distMax","xDiff","yDiff","loadExternalConnectInteraction","GrabLinks","Grab","drawGrabLine","colorLine","drawGrab","lineColor","beginPos","Grabber","grab","grabLineOptions","lineOpacity","opacityLine","linksOptions","loadExternalGrabInteraction","Pauser","loadExternalPauseInteraction","Push","Pusher","pushOptions","loadExternalPushInteraction","Remove","Remover","removeNb","loadExternalRemoveInteraction","RepulseBase","RepulseDiv","Repulse","Repulser","repulseOptions","repulse","repulseDistance","d","vect","divRepulse","repulseFactor","repulseOpts","hover","click","loadExternalRepulseInteraction","Slow","Slower","slow","slowOptions","particlePos","proximityFactor","loadExternalSlowInteraction","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","count","slice","acc","curr","blockString","len","blockData","parseColorTable","byteStream","colors","parseExtensionBlock","gif","getFrameIndex","getTransparencyIndex","frame","packedByte","transparencyFlag","transparencyIndex","applicationExtension","parseImageBlock","avgAlpha","progressCallback","localColorTableFlag","interlacedFlag","localColorCount","getColor","error","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","parseBlock","getGIFLoopAmount","extension","decodeGIF","gifURL","buffer","globalColorTableFlag","globalColorCount","backgroundColorIndex","backgroundImage","frameIndex","incrementFrameIndex","getframeIndex","increment","currentColorRegex","replaceColorSvg","imageShape","svgData","colorStyle","preFillIndex","loadImage","loadGifImage","downloadSvgImage","replaceImageColor","svgColoredData","imageRes","svg","domUrl","img2","ImageDrawer","offscreenCanvas","offscreenContext","previousImageData","images","replaceColor","close","Preload","ImagePreloaderPlugin","preloadOptions","existing","preload","addLoadImageToEngine","loadImageShape","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","loadLifeUpdater","LineDrawer","loadLineShape","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","rotate","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","updateAbsorb","r2","pixelRatio","absorb","fixBounceSpeed","destroy","resolveCollision","Collider","radius1","radius2","distP","loadParticlesCollisionsInteraction","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","Links","getLinkDistance","optDistance","warp","absDiffs","warpDistances","Linker","linkOpt1","linkOpt2","loadLinksInteraction","drawLinkLine","drawn","links","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkTriangle","pos3","colorTriangle","opacityTriangle","getLinkKey","setLinkFrequency","dictionary","LinkInstance","link","p1LinksOptions","twinkle","twinkleFreq","twinkleRgb","link1","link2","triangleOptions","linksDistance","p1Links","vertices","linkFreq","l","vertex","retina","LinksPlugin","loadLinksPlugin","loadParticlesLinksInteraction","PolygonDrawerBase","start","side","sideCount","decimalSides","interiorAngleDegrees","interiorAngle","polygon","PolygonDrawer","sides","TriangleDrawer","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","RotateAnimation","Rotate","updateRotate","rotateOptions","rotateAnimation","speed","RotateUpdater","rotateDirection","loadRotateUpdater","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","loadSquareShape","StarDrawer","inset","star","loadStarShape","updateStrokeColor","StrokeColorUpdater","strokeHslColor","strokeColor","loadStrokeColorUpdater","validTypes","TextDrawer","character","textData","text","offsetX","promises","loadTextShape","loadSlim","getOption","autoPlay","palette","default","repeat","backgroundMode","infection","cure","delay","infections","stages","parallax","resize","modes","duration","light","stop","push","remove","sync","horizontal","vertical","triangles","gravity","noise","startValue","number","density","lines","manualParticles","motion","disable","reduce","primary","main","frequency","blur","acceleration","straight","vibrate","pauseOnBlur","pauseOnOutsideViewport","themes","useTheme","particlesInit","jsx","displayName","Particles_default"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197]}