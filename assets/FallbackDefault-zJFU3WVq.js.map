{"version":3,"mappings":"uOAQA,MAAMA,EAAYC,EAAW,CAAC,CAAE,OAAAC,MAAc,CAC1C,SAAU,CACN,eAAgB,SAChB,WAAY,SACZ,MAAO,QACP,OAAQ,QACR,SAAU,QACd,EACA,QAAS,CACL,eAAgB,SAChB,WAAY,SACZ,OAAQA,EAAO,MACf,QAAS,CACL,MAAO,OACP,OAAQ,IACR,aAAc,KAClB,CACJ,CACJ,EAAE,EAEF,IAAOC,EAAQH,ECGf,MAAMI,EAAWC,EAAM,KAAK,IAAMC,EAAA,WAAO,qBAAmC,2CAAC,EAE7E,SAASC,EAAYC,EAAmD,CAC9D,MAAE,aAAAC,EAAe,EAAS,EAAAD,EAC1BE,EAAUV,IACV,CAAE,cAAAW,GAAkBC,IAEpBC,EAAeC,cAAkB,IAAM,OAAO,SAAS,SAAU,EAAE,EAEnE,CAAE,OAAAC,CAAW,EAAAC,EAAa,CAAE,SAAUH,EAAc,gBAAiBI,CAAA,CAAyB,EAE9FC,EAAgBC,UAAc,IAE3BC,MAAAC,EAAA,CAAO,QAASR,EAAc,QAAQ,WAAW,KAAK,QAAQ,MAAM,QAChE,SAAAF,EAAcW,EAAY,kCAAkC,CAAC,CAClE,GAEL,CAAE,GAEL,OACKC,OAAAC,EAAA,CAAM,UAAWd,EAAQ,QACrB,UAAAQ,EACAT,EACIW,MAAAK,EAAA,CAAW,QAAQ,YAAY,WAAY,IAAK,MAAM,aAAa,GAAI,EACnE,SAAAd,EAAcW,EAAY,uCAAuC,EAAG,CAAE,OAAAP,CAAO,CAAC,CACnF,GACA,IACR,GAER,CAEe,SAARW,EAAiClB,EAA6B,CAC3D,MAAE,aAAAC,CAAiB,EAAAD,EACnBE,EAAUV,IACV,CAAE,cAAAW,GAAkBC,IAE1B,OACKW,OAAAC,EAAA,CAAM,UAAWd,EAAQ,SACtB,UAACa,EAAA,KAAAC,EAAA,CAAM,UAAWd,EAAQ,QACtB,UAAAU,MAACO,GAAS,KAAK,QAAQ,MAAO,IAAK,OAAQ,IAAK,EAC/CP,MAAAK,EAAA,CAAW,QAAQ,KAAK,WAAY,IAAK,MAAM,aAC3C,SAAcd,EAAAW,EAAY,kCAAkC,CAAC,CAClE,GACCF,EAAA,IAAAK,EAAA,CAAW,QAAQ,KAAK,WAAY,IAAK,GAAI,EAAG,MAAM,aAClD,SAAAd,EAAcW,EAAY,oCAAoC,CAAC,EACpE,EACAF,MAACb,GAAY,aAAAE,EAA4B,GAC7C,EACAW,MAACQ,WAAA,CAAe,SAAU,KACtB,SAAAR,MAAChB,GAAS,GACd,CACJ,GAER","names":["useStyles","makeStyles","zIndex","styles_default","Particle","React.lazy","__vitePreload","ButtonRetry","props","isAutoReload","classes","formatMessage","useIntl","reloadWindow","React.useCallback","second","useCountdown","SECOND_COUNT_DOWN_ERROR","renderContent","React.useMemo","jsx","Button","baseMessage","jsxs","Stack","Typography","FallbackDefault","IconBase","React.Suspense"],"sources":["../../src/modules/module-base/components/ErrorBoundary/styles.ts","../../src/modules/module-base/components/ErrorBoundary/FallbackDefault.tsx"],"sourcesContent":["/**\n *\n * @author dongntd267@gmail.com on 24/08/2023.\n *\n */\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles(({ zIndex }) => ({\n    fallback: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden',\n    },\n    content: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: zIndex.modal,\n        '& img': {\n            width: 'auto',\n            height: 150,\n            borderRadius: '50%',\n        },\n    },\n}));\n\nexport default useStyles;\n","/**\n *\n * @author dongntd267@gmail.com on 26/07/2023.\n *\n */\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\n\n/** lib components */\nimport { Stack, Typography, Button } from '@mui/material';\n\n/** components */\nimport { IconBase } from '@module-base/components';\n\n/** constants */\nimport { SECOND_COUNT_DOWN_ERROR } from '@module-base/constants';\n\n/** utils */\nimport { baseMessage } from '@module-base/utils';\n\n/** hooks */\nimport { useCountdown } from '@module-base/hooks';\n\n/** styles */\nimport useStyles from './styles';\n\n/** types */\nimport type { FallbackDefaultProps } from '@module-base/models';\n\n/** lazy components */\nconst Particle = React.lazy(() => import('@module-base/components/Particles'));\n\nfunction ButtonRetry(props: Pick<FallbackDefaultProps, 'isAutoReload'>) {\n    const { isAutoReload = true } = props;\n    const classes = useStyles();\n    const { formatMessage } = useIntl();\n\n    const reloadWindow = React.useCallback(() => window.location.reload(), []);\n\n    const { second } = useCountdown({ callback: reloadWindow, numberCountdown: SECOND_COUNT_DOWN_ERROR });\n\n    const renderContent = React.useMemo(() => {\n        return (\n            <Button onClick={reloadWindow} variant=\"outlined\" size=\"large\" color=\"error\">\n                {formatMessage(baseMessage['module.base.error.fallback.retry'])}\n            </Button>\n        );\n    }, []);\n\n    return (\n        <Stack className={classes.content}>\n            {renderContent}\n            {isAutoReload ? (\n                <Typography variant=\"subtitle1\" fontWeight={600} color=\"error.main\" pt={3}>\n                    {formatMessage(baseMessage['module.base.error.fallback.autoReload'], { second })}\n                </Typography>\n            ) : null}\n        </Stack>\n    );\n}\n\nexport default function FallbackDefault(props: FallbackDefaultProps) {\n    const { isAutoReload } = props;\n    const classes = useStyles();\n    const { formatMessage } = useIntl();\n\n    return (\n        <Stack className={classes.fallback}>\n            <Stack className={classes.content}>\n                <IconBase name=\"error\" width={237} height={213} />\n                <Typography variant=\"h1\" fontWeight={600} color=\"error.main\">\n                    {formatMessage(baseMessage['module.base.error.fallback.title'])}\n                </Typography>\n                <Typography variant=\"h6\" fontWeight={600} py={2} color=\"error.main\">\n                    {formatMessage(baseMessage['module.base.error.fallback.content'])}\n                </Typography>\n                <ButtonRetry isAutoReload={isAutoReload} />\n            </Stack>\n            <React.Suspense fallback={null}>\n                <Particle />\n            </React.Suspense>\n        </Stack>\n    );\n}\n"],"file":"assets/FallbackDefault-zJFU3WVq.js"}